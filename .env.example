# ============================================================================
# Atlas Framework - Environment Configuration Template
# ============================================================================
# 
# USAGE:
#   Local Development:  cp .env.example .env (use local values)
#   AWS/Cloud Deploy:   cp .env.example .env.production (use cloud values)
#
# GENERATE SECRETS:
#   JWT_SECRET:         openssl rand -base64 32
#   ENCRYPTION_KEY:     openssl rand -base64 32
#   DB_PASSWORD:        openssl rand -base64 24
# ============================================================================


# ============================================================================
# APPLICATION
# ============================================================================
NODE_ENV=production
API_PORT=5000

# CDN Configuration
# LOCAL:  Leave empty or set to http://localhost:3000
# CLOUD:  Set to your CloudFront/CDN URL
CDN_URL=


# ============================================================================
# DATABASE
# ============================================================================
# REQUIRED: All environments
DB_HOST=postgres
DB_PORT=5432
DB_NAME=atlas
DB_USER=atlas_user
DB_PASSWORD=your_secure_db_password_here

# REQUIRED: Cloud deployment (for Kong API Gateway)
KONG_DB_PASSWORD=your_secure_kong_password_here


# ============================================================================
# SECURITY
# ============================================================================
# REQUIRED: All environments
# Generate with: openssl rand -base64 32
JWT_SECRET=your_jwt_secret_here
JWT_EXPIRY=24h
ENCRYPTION_KEY=your_encryption_key_here

# CORS Configuration
# LOCAL:  http://localhost:3000
# CLOUD:  https://yourdomain.com
CORS_ORIGIN=http://localhost:3000


# ============================================================================
# REDIS CACHE
# ============================================================================
# REQUIRED: All environments
REDIS_HOST=redis
REDIS_PORT=6379


# ============================================================================
# AWS CREDENTIALS
# ============================================================================
# LOCAL:  Optional - use placeholder if not needed
# CLOUD:  Required for Axiom integration and CloudFront

# For local dev, use: not_required_for_local_dev
# For cloud, use real credentials
AWS_ACCESS_KEY_ID=your_aws_access_key_or_not_required_for_local_dev
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_or_not_required_for_local_dev
AWS_REGION=eu-north-1
AWS_DEFAULT_REGION=eu-north-1

# CloudFront CDN (Optional)
# Only needed for production with CDN
AWS_CLOUDFRONT_DISTRIBUTION_ID=


# ============================================================================
# AXIOM INTEGRATION
# ============================================================================
# LOCAL:  Optional - use placeholder if testing without Axiom
# CLOUD:  Required for production Axiom integration

# Axiom controller EC2 instance IP
# For local dev: not_required_for_local_dev
# For cloud: your-axiom-ec2-ip-address
AXIOM_CONTROLLER_IP=not_required_for_local_dev
AXIOM_SSH_USER=ubuntu
AXIOM_SSH_KEY=/app/keys/axiom_key.pem


# ============================================================================
# GCP CREDENTIALS (Optional)
# ============================================================================
# Only required if using Google Cloud Platform integrations
# Leave as placeholder for local dev
GCP_PROJECT_ID=not_required_for_local_dev
GCP_SERVICE_ACCOUNT_KEY=/app/keys/gcp-service-account.json


# ============================================================================
# DIGITALOCEAN (Optional)
# ============================================================================
# Only required if using DigitalOcean integrations
# Leave as placeholder for local dev
DO_API_TOKEN=not_required_for_local_dev


# ============================================================================
# MONITORING (Optional)
# ============================================================================
# For Grafana dashboard (if enabled)
GRAFANA_PASSWORD=admin


# ============================================================================
# CDN CONFIGURATION - ADVANCED (Optional)
# ============================================================================
# Choose ONE CDN provider if using external CDN

# Option 1: AWS CloudFront (most common)
# AWS_CLOUDFRONT_DISTRIBUTION_ID=your_distribution_id

# Option 2: Cloudflare CDN
# CLOUDFLARE_ZONE_ID=your_zone_id
# CLOUDFLARE_API_TOKEN=your_api_token

# Option 3: GCP Cloud CDN
# GCP_CDN_BACKEND_BUCKET=your_cdn_bucket


# ============================================================================
# QUICK START EXAMPLES
# ============================================================================
#
# EXAMPLE 1: Local Development (Minimal)
# ----------------------------------------
# DB_PASSWORD=local_dev_password_123
# JWT_SECRET=generated_with_openssl_rand_base64_32
# ENCRYPTION_KEY=another_generated_key_here
# AWS_ACCESS_KEY_ID=not_required_for_local_dev
# AWS_SECRET_ACCESS_KEY=not_required_for_local_dev
# AXIOM_CONTROLLER_IP=not_required_for_local_dev
# GCP_PROJECT_ID=not_required_for_local_dev
# DO_API_TOKEN=not_required_for_local_dev
#
# Then run: docker-compose -f docker-compose-atlas.yml up -d
#
#
# EXAMPLE 2: AWS Cloud Production (Full)
# ----------------------------------------
# NODE_ENV=production
# CDN_URL=https://d1234567890abc.cloudfront.net
# DB_PASSWORD=StrongProductionPassword123!@#
# KONG_DB_PASSWORD=KongSecurePass456!@#
# JWT_SECRET=YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoxMjM0NTY=
# ENCRYPTION_KEY=MTIzNDU2Nzg5MGFiY2RlZmdoaWprbG1ub3BxcnN0dQ==
# CORS_ORIGIN=https://yourdomain.com
# AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
# AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
# AWS_CLOUDFRONT_DISTRIBUTION_ID=E1234ABCDEF567
# AXIOM_CONTROLLER_IP=13.53.50.201
# GCP_PROJECT_ID=your-gcp-project
# DO_API_TOKEN=dop_v1_abc123def456
# GRAFANA_PASSWORD=SecureGrafanaPass789
#
# Then run: docker-compose -f docker-compose-atlas.yml --env-file .env.production up -d
#
# ============================================================================
